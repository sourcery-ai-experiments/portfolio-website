---
interface Props {
  title: string;
  body: string;
  imgSrc: string;
  badges: string[];
  href: string;
}

const { title, body, imgSrc, badges, href } = Astro.props;
---

<li class="link-card">
  <a href={href}>
    <img src={imgSrc} alt={title} />
    <div>
      <h2>
        {title}
        <span>&rarr;</span>
      </h2>
      <p>
        {body}
      </p>
      <div class="badges">
        {badges.map((badge) => <span class="badge">{badge}</span>)}
      </div>
    </div>
  </a>
</li>
<style>
  .link-card {
    list-style: none;
    display: flex;
    flex-direction: column;
    padding: 1px;
:root {
    --card-background-color: #23262d;
}

background-color: var(--card-background-color); /* Fixed background color */
    border-radius: 16px;
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
  }

  .link-card > a {
    flex: 1;
    text-decoration: none;
    color: white; /* Fixed text color */
    display: flex;
    flex-direction: column;
    padding: 1rem;
  }

  .link-card img {
    width: 100%;
    height: auto;
    border-radius: 15px;
    margin-bottom: 1rem;
  }

  .link-card h2 {
    margin: 0;
    font-size: 1.25rem;
  }

  .link-card p {
    flex: 1;
    margin: 0.5rem 0 0;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3; /* Limit to 3 lines */
    -webkit-box-orient: vertical;
  }

  .badges {
    display: flex;
    flex-wrap: wrap; /* Allow badges to wrap */
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .badge {
    background-color: #23262d;
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 12px;
    border: 1.9px solid rgba(255, 255, 255, 0.1);
    font-size: 0.75rem; /* reduces the font size of the badges */
    max-width: 100%; /* ensures the badges don't overflow the card */
    white-space: nowrap; /* prevents the badges from breaking onto multiple lines */
    overflow: hidden; /* hides any overflow */
    text-overflow: ellipsis; /* adds an ellipsis (...) if the badge text overflows */
    transition: transform 0.3s ease; /* Add transition for transform */
  }

  .badge:hover {
    transform: scale(1.1); /* Scale up badge on hover */
  }

  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .link-card:is(:hover, :focus-within) {
    transform: translateY(-10px);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
    background-color: rgba(35, 38, 45, 0.9); /* Fixed background color on hover */
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light)); /* This can remain theme-dependent if desired */
  }
</style>
